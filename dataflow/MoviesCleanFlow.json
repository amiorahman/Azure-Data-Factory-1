{
	"name": "MoviesCleanFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MoviesIn",
						"type": "DatasetReference"
					},
					"name": "MoviesSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MoviesOut",
						"type": "DatasetReference"
					},
					"name": "MoviesCleanedSink"
				},
				{
					"dataset": {
						"referenceName": "MoviesOut",
						"type": "DatasetReference"
					},
					"name": "MovieCountSink"
				}
			],
			"transformations": [
				{
					"name": "YearExtraction"
				},
				{
					"name": "GenreArray"
				},
				{
					"name": "GenreExtraction"
				},
				{
					"name": "DeleteTitleGenres"
				},
				{
					"name": "MovieCountByYear"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "source(output(\n\t\tmovieId as short,\n\t\ttitle as string,\n\t\tgenres as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> MoviesSource\nMoviesSource derive(Year = toInteger(trim(right(title, 6), '()')),\n\t\tTitle = toString(left(title, length(title)-6))) ~> YearExtraction\nYearExtraction derive(genres = split(genres, '|')) ~> GenreArray\nGenreArray derive(Genre1 = genres[1],\n\t\tGenre2 = genres[2],\n\t\tGenre3 = genres[3],\n\t\tGenre4 = genres[4],\n\t\tGenre5 = genres[5]) ~> GenreExtraction\nGenreExtraction select(mapColumn(\n\t\tmovieId,\n\t\tYear,\n\t\tTitle = YearExtraction@Title,\n\t\tGenre1,\n\t\tGenre2,\n\t\tGenre3,\n\t\tGenre4,\n\t\tGenre5\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeleteTitleGenres\nDeleteTitleGenres aggregate(groupBy(Year),\n\tMovieCount = count()) ~> MovieCountByYear\nDeleteTitleGenres aggregate(groupBy(Genre1),\n\tGenre1Count = count()) ~> Aggregate1\nMovieCountByYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['movies-cleaned.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MoviesCleanedSink\nDeleteTitleGenres sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['movies-by-year.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MovieCountSink"
		}
	}
}